{"ast":null,"code":"var _jsxFileName = \"D:\\\\ManageStudent\\\\Front_end\\\\src\\\\Component\\\\HomePage.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from './ModalForm';\nimport DataTable from './DataTable';\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      items: []\n    };\n  }\n\n  getItems() {\n    axios.get('http://localhost:8000/home/data', {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          isLogin: \"true\"\n        });\n        console.log(response);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    }); // fetch('http://localhost:3000/crud')\n    //   .then(response => response.json())\n    //   .then(items => this.setState({ items }))\n    //   .catch(err => console.log(err))\n  } // addItemToState = (item) => {\n  //   this.setState(prevState => ({\n  //     items: [...prevState.items, item]\n  //   }))\n  // }\n  // updateState = (item) => {\n  //   const itemIndex = this.state.items.findIndex(data => data.id === item.id)\n  //   const newArray = [\n  //     // destructure all items from beginning to the indexed item\n  //     ...this.state.items.slice(0, itemIndex),\n  //     // add the updated item to the array\n  //     item,\n  //     // add the rest of the items to the array from the index after the replaced item\n  //     ...this.state.items.slice(itemIndex + 1)\n  //   ]\n  //   this.setState({ items: newArray })\n  // }\n  // deleteItemFromState = (id) => {\n  //   const updatedItems = this.state.items.filter(item => item.id !== id)\n  //   this.setState({ items: updatedItems })\n  // }\n\n\n  componentDidMount() {// this.getItems()\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"HomePage\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              margin: \"20px 0\"\n            },\n            children: \"CRUD Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            items: this.state.items,\n            updateState: this.updateState,\n            deleteItemFromState: this.deleteItemFromState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(CSVLink, {\n            filename: \"db.csv\",\n            color: \"primary\",\n            style: {\n              float: \"left\",\n              marginRight: \"10px\"\n            },\n            className: \"btn btn-primary\",\n            data: this.state.items,\n            children: \"Download CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n            buttonLabel: \"Add Item\",\n            addItemToState: this.addItemToState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"names":["React","Component","Container","Row","Col","ModalForm","DataTable","CSVLink","axios","HomePage","state","items","getItems","get","username","password","then","response","status","setState","isLogin","console","log","catch","error","componentDidMount","render","margin","updateState","deleteItemFromState","float","marginRight","addItemToState"],"sources":["D:/ManageStudent/Front_end/src/Component/HomePage.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport ModalForm from './ModalForm'\r\nimport DataTable from './DataTable'\r\nimport { CSVLink } from \"react-csv\"\r\nimport axios from 'axios'\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    items: []\r\n  }\r\n\r\n  getItems() {\r\n    axios.get('http://localhost:8000/home/data', {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          this.setState({ isLogin: \"true\" })\r\n          console.log(response)\r\n        }\r\n      }\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    // fetch('http://localhost:3000/crud')\r\n    //   .then(response => response.json())\r\n    //   .then(items => this.setState({ items }))\r\n    //   .catch(err => console.log(err))\r\n  }\r\n\r\n  // addItemToState = (item) => {\r\n  //   this.setState(prevState => ({\r\n  //     items: [...prevState.items, item]\r\n  //   }))\r\n  // }\r\n\r\n  // updateState = (item) => {\r\n  //   const itemIndex = this.state.items.findIndex(data => data.id === item.id)\r\n  //   const newArray = [\r\n  //     // destructure all items from beginning to the indexed item\r\n  //     ...this.state.items.slice(0, itemIndex),\r\n  //     // add the updated item to the array\r\n  //     item,\r\n  //     // add the rest of the items to the array from the index after the replaced item\r\n  //     ...this.state.items.slice(itemIndex + 1)\r\n  //   ]\r\n  //   this.setState({ items: newArray })\r\n  // }\r\n\r\n  // deleteItemFromState = (id) => {\r\n  //   const updatedItems = this.state.items.filter(item => item.id !== id)\r\n  //   this.setState({ items: updatedItems })\r\n  // }\r\n\r\n  componentDidMount() {\r\n    // this.getItems()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"HomePage\">\r\n        <Row>\r\n          <Col>\r\n            <h1 style={{ margin: \"20px 0\" }}>CRUD Database</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <DataTable items={this.state.items} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CSVLink\r\n              filename={\"db.csv\"}\r\n              color=\"primary\"\r\n              style={{ float: \"left\", marginRight: \"10px\" }}\r\n              className=\"btn btn-primary\"\r\n              data={this.state.items}>\r\n              Download CSV\r\n            </CSVLink>\r\n            <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;EAAA;IAAA;IAAA,KAC/BS,KAD+B,GACvB;MACNC,KAAK,EAAE;IADD,CADuB;EAAA;;EAK/BC,QAAQ,GAAG;IACTJ,KAAK,CAACK,GAAN,CAAU,iCAAV,EAA6C;MAC3CC,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QADsB;MAE3CC,QAAQ,EAAE,KAAKL,KAAL,CAAWK;IAFsB,CAA7C,EAIGC,IAJH,CAIQC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;QAC3B,KAAKC,QAAL,CAAc;UAAEC,OAAO,EAAE;QAAX,CAAd;QACAC,OAAO,CAACC,GAAR,CAAYL,QAAZ;MACD;IACF,CATH,EAWGM,KAXH,CAWS,UAAUC,KAAV,EAAiB;MACtBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACD,CAbH,EADS,CAeT;IACA;IACA;IACA;EACD,CAxB8B,CA0B/B;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;;EAEAC,iBAAiB,GAAG,CAClB;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE,QAAC,SAAD;MAAW,SAAS,EAAC,UAArB;MAAA,wBACE,QAAC,GAAD;QAAA,uBACE,QAAC,GAAD;UAAA,uBACE;YAAI,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAV,CAAX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,GAAD;QAAA,uBACE,QAAC,GAAD;UAAA,uBACE,QAAC,SAAD;YAAW,KAAK,EAAE,KAAKjB,KAAL,CAAWC,KAA7B;YAAoC,WAAW,EAAE,KAAKiB,WAAtD;YAAmE,mBAAmB,EAAE,KAAKC;UAA7F;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF,eAWE,QAAC,GAAD;QAAA,uBACE,QAAC,GAAD;UAAA,wBACE,QAAC,OAAD;YACE,QAAQ,EAAE,QADZ;YAEE,KAAK,EAAC,SAFR;YAGE,KAAK,EAAE;cAAEC,KAAK,EAAE,MAAT;cAAiBC,WAAW,EAAE;YAA9B,CAHT;YAIE,SAAS,EAAC,iBAJZ;YAKE,IAAI,EAAE,KAAKrB,KAAL,CAAWC,KALnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eASE,QAAC,SAAD;YAAW,WAAW,EAAC,UAAvB;YAAkC,cAAc,EAAE,KAAKqB;UAAvD;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA2BD;;AAlF8B;;AAqFjC,eAAevB,QAAf"},"metadata":{},"sourceType":"module"}