{"ast":null,"code":"var _jsxFileName = \"D:\\\\ManageStudent\\\\Front_end\\\\src\\\\Component\\\\ModalForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport AddEditForm from './AddEditForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    };\n\n    this.state = {\n      modal: false\n    };\n  }\n\n  render() {\n    const closeBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close\",\n      onClick: this.toggle,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }, this);\n\n    const label = this.props.buttonLabel;\n    let button = '';\n    let title = '';\n\n    if (label === 'Edit') {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        color: \"warning\",\n        onClick: this.toggle,\n        style: {\n          float: \"left\",\n          marginRight: \"10px\"\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this);\n      title = 'Edit Item';\n    } else {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: this.toggle,\n        style: {\n          float: \"left\",\n          marginRight: \"10px\"\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }, this);\n      title = 'Add New Item';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalForm;","map":{"version":3,"names":["React","Component","Button","Modal","ModalHeader","ModalBody","AddEditForm","ModalForm","constructor","props","toggle","setState","prevState","modal","state","render","closeBtn","label","buttonLabel","button","title","float","marginRight"],"sources":["D:/ManageStudent/Front_end/src/Component/ModalForm.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport AddEditForm from './AddEditForm'\r\n\r\nclass ModalForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\r\n\r\n        const label = this.props.buttonLabel\r\n\r\n        let button = ''\r\n        let title = ''\r\n\r\n        if (label === 'Edit') {\r\n            button = <Button\r\n                color=\"warning\"\r\n                onClick={this.toggle}\r\n                style={{ float: \"left\", marginRight: \"10px\" }}>{label}\r\n            </Button>\r\n            title = 'Edit Item'\r\n        } else {\r\n            button = <Button\r\n                color=\"success\"\r\n                onClick={this.toggle}\r\n                style={{ float: \"left\", marginRight: \"10px\" }}>{label}\r\n            </Button>\r\n            title = 'Add New Item'\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                {/* {button}\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\r\n                    <ModalBody>\r\n                        <AddEditForm\r\n                            addItemToState={this.props.addItemToState}\r\n                            updateState={this.props.updateState}\r\n                            toggle={this.toggle}\r\n                            item={this.props.item} />\r\n                    </ModalBody>\r\n                </Modal> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,YAAtD;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;EAC9BO,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAOnBC,MAPmB,GAOV,MAAM;MACX,KAAKC,QAAL,CAAcC,SAAS,KAAK;QACxBC,KAAK,EAAE,CAACD,SAAS,CAACC;MADM,CAAL,CAAvB;IAGH,CAXkB;;IAEf,KAAKC,KAAL,GAAa;MACTD,KAAK,EAAE;IADE,CAAb;EAGH;;EAQDE,MAAM,GAAG;IACL,MAAMC,QAAQ,gBAAG;MAAQ,SAAS,EAAC,OAAlB;MAA0B,OAAO,EAAE,KAAKN,MAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAjB;;IAEA,MAAMO,KAAK,GAAG,KAAKR,KAAL,CAAWS,WAAzB;IAEA,IAAIC,MAAM,GAAG,EAAb;IACA,IAAIC,KAAK,GAAG,EAAZ;;IAEA,IAAIH,KAAK,KAAK,MAAd,EAAsB;MAClBE,MAAM,gBAAG,QAAC,MAAD;QACL,KAAK,EAAC,SADD;QAEL,OAAO,EAAE,KAAKT,MAFT;QAGL,KAAK,EAAE;UAAEW,KAAK,EAAE,MAAT;UAAiBC,WAAW,EAAE;QAA9B,CAHF;QAAA,UAG2CL;MAH3C;QAAA;QAAA;QAAA;MAAA,QAAT;MAKAG,KAAK,GAAG,WAAR;IACH,CAPD,MAOO;MACHD,MAAM,gBAAG,QAAC,MAAD;QACL,KAAK,EAAC,SADD;QAEL,OAAO,EAAE,KAAKT,MAFT;QAGL,KAAK,EAAE;UAAEW,KAAK,EAAE,MAAT;UAAiBC,WAAW,EAAE;QAA9B,CAHF;QAAA,UAG2CL;MAH3C;QAAA;QAAA;QAAA;MAAA,QAAT;MAKAG,KAAK,GAAG,cAAR;IACH;;IAGD,oBACI;MAAA;MAAA;MAAA;IAAA,QADJ;EAeH;;AAtD6B;;AAyDlC,eAAeb,SAAf"},"metadata":{},"sourceType":"module"}