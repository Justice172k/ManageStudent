{"ast":null,"code":"var _jsxFileName = \"D:\\\\ManageStudent\\\\Front_end\\\\src\\\\Component\\\\ModalEditUser.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalEditUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChangeInput = (event, nameState) => {\n      let copyState = { ...this.state\n      };\n      copyState[nameState] = event.target.value;\n      this.setState({ ...copyState\n      }); // }, () => { console.log('check state:', this.state) }) // nen dung call back function de tranh bat dong bo\n    };\n\n    this.checkValideInput = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing parameter:' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleSaveUser = () => {\n      if (this.checkValideInput()) this.props.editUser(this.state);\n    };\n\n    this.state = {\n      userID: '',\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: ''\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.currentUser; // console.log(user)\n\n    if (user && !_.isEmpty(user)) {\n      this.setState({\n        userID: user.userID,\n        email: user.email,\n        password: 'hardcode',\n        firstName: user.firstName,\n        lastName: user.lastName,\n        address: user.address\n      });\n    } // this.setState({\n    //     id: user.id,\n    //     email: user.email,\n    //     password: 'hardcode',\n    //     firstName: user.firstName,\n    //     lastName: user.lastName,\n    //     address: user.address\n    // })\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.props.isOpen,\n        toggle: () => {\n          this.toggle();\n        },\n        className: \"modal-user-container\",\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Modal title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-user-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"email\");\n                },\n                value: this.state.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"password\");\n                },\n                value: this.state.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"firstName\");\n                },\n                value: this.state.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"lastName\");\n                },\n                value: this.state.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container max-width-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Adress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"address\");\n                },\n                value: this.state.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            className: \"px-3\",\n            onClick: () => {\n              this.handleSaveUser();\n            },\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            className: \"px-3\",\n            onClick: () => {\n              this.toggle();\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalEditUser;","map":{"version":3,"names":["React","Component","_","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalEditUser","constructor","props","toggle","toggleFromParent","handleOnChangeInput","event","nameState","copyState","state","target","value","setState","checkValideInput","isValid","arrInput","i","length","alert","handleSaveUser","editUser","userID","email","password","firstName","lastName","address","componentDidMount","user","currentUser","isEmpty","render","isOpen"],"sources":["D:/ManageStudent/Front_end/src/Component/ModalEditUser.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: '',\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            address: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let user = this.props.currentUser;\r\n        // console.log(user)\r\n        if (user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                userID: user.userID,\r\n                email: user.email,\r\n                password: 'hardcode',\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                address: user.address\r\n            })\r\n        }\r\n        // this.setState({\r\n        //     id: user.id,\r\n        //     email: user.email,\r\n        //     password: 'hardcode',\r\n        //     firstName: user.firstName,\r\n        //     lastName: user.lastName,\r\n        //     address: user.address\r\n        // })\r\n    }\r\n\r\n    toggle = () => { this.props.toggleFromParent() }\r\n\r\n    handleOnChangeInput = (event, nameState) => {\r\n        let copyState = { ...this.state };\r\n        copyState[nameState] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n        // }, () => { console.log('check state:', this.state) }) // nen dung call back function de tranh bat dong bo\r\n    }\r\n\r\n    checkValideInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing parameter:' + arrInput[i])\r\n                break;\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    handleSaveUser = () => {\r\n        if (this.checkValideInput())\r\n            this.props.editUser(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.props.isOpen} toggle={() => { this.toggle() }} className={\"modal-user-container\"} size={\"lg\"} >\r\n                    <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className='modal-user-body'>\r\n                            <div className='input-container'>\r\n                                <label>Email</label>\r\n                                <input type=\"text\" onChange={(event) => { this.handleOnChangeInput(event, \"email\") }} value={this.state.email} />\r\n                            </div>\r\n                            <div className='input-container'>\r\n                                <label>Password</label>\r\n                                <input type=\"password\" onChange={(event) => { this.handleOnChangeInput(event, \"password\") }} value={this.state.password} />\r\n                            </div>\r\n                            <div className='input-container'>\r\n                                <label>First Name</label>\r\n                                <input type=\"text\" onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }} value={this.state.firstName} />\r\n                            </div>\r\n                            <div className='input-container'>\r\n                                <label>Last Name</label>\r\n                                <input type=\"text\" onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }} value={this.state.lastName} />\r\n                            </div>\r\n                            <div className='input-container max-width-input'>\r\n                                <label>Adress</label>\r\n                                <input type=\"text\" onChange={(event) => { this.handleOnChangeInput(event, \"address\") }} value={this.state.address} />\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" className='px-3' onClick={() => { this.handleSaveUser() }}>Save Changes</Button>{' '}\r\n                        <Button color=\"secondary\" className='px-3' onClick={() => { this.toggle() }}>Close</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ModalEditUser;"],"mappings":"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"},"metadata":{},"sourceType":"module"}